/*
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2024 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A shop created by an Etsy user.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-03T07:15:13.096948200+02:00[Europe/Berlin]")
public class ShopListingWithAssociationsShop {
  public static final String SERIALIZED_NAME_SHOP_ID = "shop_id";
  @SerializedName(SERIALIZED_NAME_SHOP_ID)
  private Long shopId;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Long userId;

  public static final String SERIALIZED_NAME_SHOP_NAME = "shop_name";
  @SerializedName(SERIALIZED_NAME_SHOP_NAME)
  private String shopName;

  public static final String SERIALIZED_NAME_CREATE_DATE = "create_date";
  @SerializedName(SERIALIZED_NAME_CREATE_DATE)
  private Long createDate;

  public static final String SERIALIZED_NAME_CREATED_TIMESTAMP = "created_timestamp";
  @SerializedName(SERIALIZED_NAME_CREATED_TIMESTAMP)
  private Long createdTimestamp;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_ANNOUNCEMENT = "announcement";
  @SerializedName(SERIALIZED_NAME_ANNOUNCEMENT)
  private String announcement;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currency_code";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_IS_VACATION = "is_vacation";
  @SerializedName(SERIALIZED_NAME_IS_VACATION)
  private Boolean isVacation;

  public static final String SERIALIZED_NAME_VACATION_MESSAGE = "vacation_message";
  @SerializedName(SERIALIZED_NAME_VACATION_MESSAGE)
  private String vacationMessage;

  public static final String SERIALIZED_NAME_SALE_MESSAGE = "sale_message";
  @SerializedName(SERIALIZED_NAME_SALE_MESSAGE)
  private String saleMessage;

  public static final String SERIALIZED_NAME_DIGITAL_SALE_MESSAGE = "digital_sale_message";
  @SerializedName(SERIALIZED_NAME_DIGITAL_SALE_MESSAGE)
  private String digitalSaleMessage;

  public static final String SERIALIZED_NAME_UPDATE_DATE = "update_date";
  @SerializedName(SERIALIZED_NAME_UPDATE_DATE)
  private Long updateDate;

  public static final String SERIALIZED_NAME_UPDATED_TIMESTAMP = "updated_timestamp";
  @SerializedName(SERIALIZED_NAME_UPDATED_TIMESTAMP)
  private Long updatedTimestamp;

  public static final String SERIALIZED_NAME_LISTING_ACTIVE_COUNT = "listing_active_count";
  @SerializedName(SERIALIZED_NAME_LISTING_ACTIVE_COUNT)
  private Long listingActiveCount;

  public static final String SERIALIZED_NAME_DIGITAL_LISTING_COUNT = "digital_listing_count";
  @SerializedName(SERIALIZED_NAME_DIGITAL_LISTING_COUNT)
  private Long digitalListingCount;

  public static final String SERIALIZED_NAME_LOGIN_NAME = "login_name";
  @SerializedName(SERIALIZED_NAME_LOGIN_NAME)
  private String loginName;

  public static final String SERIALIZED_NAME_ACCEPTS_CUSTOM_REQUESTS = "accepts_custom_requests";
  @SerializedName(SERIALIZED_NAME_ACCEPTS_CUSTOM_REQUESTS)
  private Boolean acceptsCustomRequests;

  public static final String SERIALIZED_NAME_POLICY_WELCOME = "policy_welcome";
  @SerializedName(SERIALIZED_NAME_POLICY_WELCOME)
  private String policyWelcome;

  public static final String SERIALIZED_NAME_POLICY_PAYMENT = "policy_payment";
  @SerializedName(SERIALIZED_NAME_POLICY_PAYMENT)
  private String policyPayment;

  public static final String SERIALIZED_NAME_POLICY_SHIPPING = "policy_shipping";
  @SerializedName(SERIALIZED_NAME_POLICY_SHIPPING)
  private String policyShipping;

  public static final String SERIALIZED_NAME_POLICY_REFUNDS = "policy_refunds";
  @SerializedName(SERIALIZED_NAME_POLICY_REFUNDS)
  private String policyRefunds;

  public static final String SERIALIZED_NAME_POLICY_ADDITIONAL = "policy_additional";
  @SerializedName(SERIALIZED_NAME_POLICY_ADDITIONAL)
  private String policyAdditional;

  public static final String SERIALIZED_NAME_POLICY_SELLER_INFO = "policy_seller_info";
  @SerializedName(SERIALIZED_NAME_POLICY_SELLER_INFO)
  private String policySellerInfo;

  public static final String SERIALIZED_NAME_POLICY_UPDATE_DATE = "policy_update_date";
  @SerializedName(SERIALIZED_NAME_POLICY_UPDATE_DATE)
  private Long policyUpdateDate;

  public static final String SERIALIZED_NAME_POLICY_HAS_PRIVATE_RECEIPT_INFO = "policy_has_private_receipt_info";
  @SerializedName(SERIALIZED_NAME_POLICY_HAS_PRIVATE_RECEIPT_INFO)
  private Boolean policyHasPrivateReceiptInfo;

  public static final String SERIALIZED_NAME_HAS_UNSTRUCTURED_POLICIES = "has_unstructured_policies";
  @SerializedName(SERIALIZED_NAME_HAS_UNSTRUCTURED_POLICIES)
  private Boolean hasUnstructuredPolicies;

  public static final String SERIALIZED_NAME_POLICY_PRIVACY = "policy_privacy";
  @SerializedName(SERIALIZED_NAME_POLICY_PRIVACY)
  private String policyPrivacy;

  public static final String SERIALIZED_NAME_VACATION_AUTOREPLY = "vacation_autoreply";
  @SerializedName(SERIALIZED_NAME_VACATION_AUTOREPLY)
  private String vacationAutoreply;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_IMAGE_URL760X100 = "image_url_760x100";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL760X100)
  private String imageUrl760x100;

  public static final String SERIALIZED_NAME_NUM_FAVORERS = "num_favorers";
  @SerializedName(SERIALIZED_NAME_NUM_FAVORERS)
  private Long numFavorers;

  public static final String SERIALIZED_NAME_LANGUAGES = "languages";
  @SerializedName(SERIALIZED_NAME_LANGUAGES)
  private List<String> languages = new ArrayList<>();

  public static final String SERIALIZED_NAME_ICON_URL_FULLXFULL = "icon_url_fullxfull";
  @SerializedName(SERIALIZED_NAME_ICON_URL_FULLXFULL)
  private String iconUrlFullxfull;

  public static final String SERIALIZED_NAME_IS_USING_STRUCTURED_POLICIES = "is_using_structured_policies";
  @SerializedName(SERIALIZED_NAME_IS_USING_STRUCTURED_POLICIES)
  private Boolean isUsingStructuredPolicies;

  public static final String SERIALIZED_NAME_HAS_ONBOARDED_STRUCTURED_POLICIES = "has_onboarded_structured_policies";
  @SerializedName(SERIALIZED_NAME_HAS_ONBOARDED_STRUCTURED_POLICIES)
  private Boolean hasOnboardedStructuredPolicies;

  public static final String SERIALIZED_NAME_INCLUDE_DISPUTE_FORM_LINK = "include_dispute_form_link";
  @SerializedName(SERIALIZED_NAME_INCLUDE_DISPUTE_FORM_LINK)
  private Boolean includeDisputeFormLink;

  public static final String SERIALIZED_NAME_IS_DIRECT_CHECKOUT_ONBOARDED = "is_direct_checkout_onboarded";
  @SerializedName(SERIALIZED_NAME_IS_DIRECT_CHECKOUT_ONBOARDED)
  private Boolean isDirectCheckoutOnboarded;

  public static final String SERIALIZED_NAME_IS_ETSY_PAYMENTS_ONBOARDED = "is_etsy_payments_onboarded";
  @SerializedName(SERIALIZED_NAME_IS_ETSY_PAYMENTS_ONBOARDED)
  private Boolean isEtsyPaymentsOnboarded;

  public static final String SERIALIZED_NAME_IS_CALCULATED_ELIGIBLE = "is_calculated_eligible";
  @SerializedName(SERIALIZED_NAME_IS_CALCULATED_ELIGIBLE)
  private Boolean isCalculatedEligible;

  public static final String SERIALIZED_NAME_IS_OPTED_IN_TO_BUYER_PROMISE = "is_opted_in_to_buyer_promise";
  @SerializedName(SERIALIZED_NAME_IS_OPTED_IN_TO_BUYER_PROMISE)
  private Boolean isOptedInToBuyerPromise;

  public static final String SERIALIZED_NAME_IS_SHOP_US_BASED = "is_shop_us_based";
  @SerializedName(SERIALIZED_NAME_IS_SHOP_US_BASED)
  private Boolean isShopUsBased;

  public static final String SERIALIZED_NAME_TRANSACTION_SOLD_COUNT = "transaction_sold_count";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_SOLD_COUNT)
  private Long transactionSoldCount;

  public static final String SERIALIZED_NAME_SHIPPING_FROM_COUNTRY_ISO = "shipping_from_country_iso";
  @SerializedName(SERIALIZED_NAME_SHIPPING_FROM_COUNTRY_ISO)
  private String shippingFromCountryIso;

  public static final String SERIALIZED_NAME_SHOP_LOCATION_COUNTRY_ISO = "shop_location_country_iso";
  @SerializedName(SERIALIZED_NAME_SHOP_LOCATION_COUNTRY_ISO)
  private String shopLocationCountryIso;

  public static final String SERIALIZED_NAME_REVIEW_COUNT = "review_count";
  @SerializedName(SERIALIZED_NAME_REVIEW_COUNT)
  private Long reviewCount;

  public static final String SERIALIZED_NAME_REVIEW_AVERAGE = "review_average";
  @SerializedName(SERIALIZED_NAME_REVIEW_AVERAGE)
  private Float reviewAverage;

  public ShopListingWithAssociationsShop() {
  }

  public ShopListingWithAssociationsShop shopId(Long shopId) {
    
    this.shopId = shopId;
    return this;
  }

   /**
   * The unique positive non-zero numeric ID for an Etsy Shop.
   * minimum: 1
   * @return shopId
  **/
  @javax.annotation.Nullable

  public Long getShopId() {
    return shopId;
  }


  public void setShopId(Long shopId) {
    this.shopId = shopId;
  }


  public ShopListingWithAssociationsShop userId(Long userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The numeric user ID of the [user](/documentation/reference#tag/User) who owns this shop.
   * minimum: 1
   * @return userId
  **/
  @javax.annotation.Nullable

  public Long getUserId() {
    return userId;
  }


  public void setUserId(Long userId) {
    this.userId = userId;
  }


  public ShopListingWithAssociationsShop shopName(String shopName) {
    
    this.shopName = shopName;
    return this;
  }

   /**
   * The shop&#39;s name string.
   * @return shopName
  **/
  @javax.annotation.Nullable

  public String getShopName() {
    return shopName;
  }


  public void setShopName(String shopName) {
    this.shopName = shopName;
  }


  public ShopListingWithAssociationsShop createDate(Long createDate) {
    
    this.createDate = createDate;
    return this;
  }

   /**
   * The date and time this shop was created, in epoch seconds.
   * minimum: 0
   * @return createDate
  **/
  @javax.annotation.Nullable

  public Long getCreateDate() {
    return createDate;
  }


  public void setCreateDate(Long createDate) {
    this.createDate = createDate;
  }


  public ShopListingWithAssociationsShop createdTimestamp(Long createdTimestamp) {
    
    this.createdTimestamp = createdTimestamp;
    return this;
  }

   /**
   * The date and time this shop was created, in epoch seconds.
   * minimum: 0
   * @return createdTimestamp
  **/
  @javax.annotation.Nullable

  public Long getCreatedTimestamp() {
    return createdTimestamp;
  }


  public void setCreatedTimestamp(Long createdTimestamp) {
    this.createdTimestamp = createdTimestamp;
  }


  public ShopListingWithAssociationsShop title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * A brief heading string for the shop\\&#39;s main page.
   * @return title
  **/
  @javax.annotation.Nullable

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public ShopListingWithAssociationsShop announcement(String announcement) {
    
    this.announcement = announcement;
    return this;
  }

   /**
   * An announcement string to buyers that displays on the shop&#39;s homepage.
   * @return announcement
  **/
  @javax.annotation.Nullable

  public String getAnnouncement() {
    return announcement;
  }


  public void setAnnouncement(String announcement) {
    this.announcement = announcement;
  }


  public ShopListingWithAssociationsShop currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * The ISO (alphabetic) code for the shop&#39;s currency. The shop displays all prices in this currency by default.
   * @return currencyCode
  **/
  @javax.annotation.Nullable

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public ShopListingWithAssociationsShop isVacation(Boolean isVacation) {
    
    this.isVacation = isVacation;
    return this;
  }

   /**
   * When true, this shop is not accepting purchases.
   * @return isVacation
  **/
  @javax.annotation.Nullable

  public Boolean getIsVacation() {
    return isVacation;
  }


  public void setIsVacation(Boolean isVacation) {
    this.isVacation = isVacation;
  }


  public ShopListingWithAssociationsShop vacationMessage(String vacationMessage) {
    
    this.vacationMessage = vacationMessage;
    return this;
  }

   /**
   * The shop&#39;s message string displayed when &#x60;is_vacation&#x60; is true.
   * @return vacationMessage
  **/
  @javax.annotation.Nullable

  public String getVacationMessage() {
    return vacationMessage;
  }


  public void setVacationMessage(String vacationMessage) {
    this.vacationMessage = vacationMessage;
  }


  public ShopListingWithAssociationsShop saleMessage(String saleMessage) {
    
    this.saleMessage = saleMessage;
    return this;
  }

   /**
   * A message string sent to users who complete a purchase from this shop.
   * @return saleMessage
  **/
  @javax.annotation.Nullable

  public String getSaleMessage() {
    return saleMessage;
  }


  public void setSaleMessage(String saleMessage) {
    this.saleMessage = saleMessage;
  }


  public ShopListingWithAssociationsShop digitalSaleMessage(String digitalSaleMessage) {
    
    this.digitalSaleMessage = digitalSaleMessage;
    return this;
  }

   /**
   * A message string sent to users who purchase a digital item from this shop.
   * @return digitalSaleMessage
  **/
  @javax.annotation.Nullable

  public String getDigitalSaleMessage() {
    return digitalSaleMessage;
  }


  public void setDigitalSaleMessage(String digitalSaleMessage) {
    this.digitalSaleMessage = digitalSaleMessage;
  }


  public ShopListingWithAssociationsShop updateDate(Long updateDate) {
    
    this.updateDate = updateDate;
    return this;
  }

   /**
   * The date and time of the last update to the shop, in epoch seconds.
   * minimum: 0
   * @return updateDate
  **/
  @javax.annotation.Nullable

  public Long getUpdateDate() {
    return updateDate;
  }


  public void setUpdateDate(Long updateDate) {
    this.updateDate = updateDate;
  }


  public ShopListingWithAssociationsShop updatedTimestamp(Long updatedTimestamp) {
    
    this.updatedTimestamp = updatedTimestamp;
    return this;
  }

   /**
   * The date and time of the last update to the shop, in epoch seconds.
   * minimum: 0
   * @return updatedTimestamp
  **/
  @javax.annotation.Nullable

  public Long getUpdatedTimestamp() {
    return updatedTimestamp;
  }


  public void setUpdatedTimestamp(Long updatedTimestamp) {
    this.updatedTimestamp = updatedTimestamp;
  }


  public ShopListingWithAssociationsShop listingActiveCount(Long listingActiveCount) {
    
    this.listingActiveCount = listingActiveCount;
    return this;
  }

   /**
   * The number of active listings in the shop.
   * minimum: 0
   * @return listingActiveCount
  **/
  @javax.annotation.Nullable

  public Long getListingActiveCount() {
    return listingActiveCount;
  }


  public void setListingActiveCount(Long listingActiveCount) {
    this.listingActiveCount = listingActiveCount;
  }


  public ShopListingWithAssociationsShop digitalListingCount(Long digitalListingCount) {
    
    this.digitalListingCount = digitalListingCount;
    return this;
  }

   /**
   * The number of digital listings in the shop.
   * minimum: 0
   * @return digitalListingCount
  **/
  @javax.annotation.Nullable

  public Long getDigitalListingCount() {
    return digitalListingCount;
  }


  public void setDigitalListingCount(Long digitalListingCount) {
    this.digitalListingCount = digitalListingCount;
  }


  public ShopListingWithAssociationsShop loginName(String loginName) {
    
    this.loginName = loginName;
    return this;
  }

   /**
   * The shop owner\\&#39;s login name string.
   * @return loginName
  **/
  @javax.annotation.Nullable

  public String getLoginName() {
    return loginName;
  }


  public void setLoginName(String loginName) {
    this.loginName = loginName;
  }


  public ShopListingWithAssociationsShop acceptsCustomRequests(Boolean acceptsCustomRequests) {
    
    this.acceptsCustomRequests = acceptsCustomRequests;
    return this;
  }

   /**
   * When true, the shop accepts customization requests.
   * @return acceptsCustomRequests
  **/
  @javax.annotation.Nullable

  public Boolean getAcceptsCustomRequests() {
    return acceptsCustomRequests;
  }


  public void setAcceptsCustomRequests(Boolean acceptsCustomRequests) {
    this.acceptsCustomRequests = acceptsCustomRequests;
  }


  public ShopListingWithAssociationsShop policyWelcome(String policyWelcome) {
    
    this.policyWelcome = policyWelcome;
    return this;
  }

   /**
   * The shop&#39;s policy welcome string (may be blank).
   * @return policyWelcome
  **/
  @javax.annotation.Nullable

  public String getPolicyWelcome() {
    return policyWelcome;
  }


  public void setPolicyWelcome(String policyWelcome) {
    this.policyWelcome = policyWelcome;
  }


  public ShopListingWithAssociationsShop policyPayment(String policyPayment) {
    
    this.policyPayment = policyPayment;
    return this;
  }

   /**
   * The shop&#39;s payment policy string (may be blank).
   * @return policyPayment
  **/
  @javax.annotation.Nullable

  public String getPolicyPayment() {
    return policyPayment;
  }


  public void setPolicyPayment(String policyPayment) {
    this.policyPayment = policyPayment;
  }


  public ShopListingWithAssociationsShop policyShipping(String policyShipping) {
    
    this.policyShipping = policyShipping;
    return this;
  }

   /**
   * The shop&#39;s shipping policy string (may be blank).
   * @return policyShipping
  **/
  @javax.annotation.Nullable

  public String getPolicyShipping() {
    return policyShipping;
  }


  public void setPolicyShipping(String policyShipping) {
    this.policyShipping = policyShipping;
  }


  public ShopListingWithAssociationsShop policyRefunds(String policyRefunds) {
    
    this.policyRefunds = policyRefunds;
    return this;
  }

   /**
   * The shop&#39;s refund policy string (may be blank).
   * @return policyRefunds
  **/
  @javax.annotation.Nullable

  public String getPolicyRefunds() {
    return policyRefunds;
  }


  public void setPolicyRefunds(String policyRefunds) {
    this.policyRefunds = policyRefunds;
  }


  public ShopListingWithAssociationsShop policyAdditional(String policyAdditional) {
    
    this.policyAdditional = policyAdditional;
    return this;
  }

   /**
   * The shop&#39;s additional policies string (may be blank).
   * @return policyAdditional
  **/
  @javax.annotation.Nullable

  public String getPolicyAdditional() {
    return policyAdditional;
  }


  public void setPolicyAdditional(String policyAdditional) {
    this.policyAdditional = policyAdditional;
  }


  public ShopListingWithAssociationsShop policySellerInfo(String policySellerInfo) {
    
    this.policySellerInfo = policySellerInfo;
    return this;
  }

   /**
   * The shop&#39;s seller information string (may be blank).
   * @return policySellerInfo
  **/
  @javax.annotation.Nullable

  public String getPolicySellerInfo() {
    return policySellerInfo;
  }


  public void setPolicySellerInfo(String policySellerInfo) {
    this.policySellerInfo = policySellerInfo;
  }


  public ShopListingWithAssociationsShop policyUpdateDate(Long policyUpdateDate) {
    
    this.policyUpdateDate = policyUpdateDate;
    return this;
  }

   /**
   * The date and time of the last update to the shop&#39;s policies, in epoch seconds.
   * minimum: 0
   * @return policyUpdateDate
  **/
  @javax.annotation.Nullable

  public Long getPolicyUpdateDate() {
    return policyUpdateDate;
  }


  public void setPolicyUpdateDate(Long policyUpdateDate) {
    this.policyUpdateDate = policyUpdateDate;
  }


  public ShopListingWithAssociationsShop policyHasPrivateReceiptInfo(Boolean policyHasPrivateReceiptInfo) {
    
    this.policyHasPrivateReceiptInfo = policyHasPrivateReceiptInfo;
    return this;
  }

   /**
   * When true, EU receipts display private info.
   * @return policyHasPrivateReceiptInfo
  **/
  @javax.annotation.Nullable

  public Boolean getPolicyHasPrivateReceiptInfo() {
    return policyHasPrivateReceiptInfo;
  }


  public void setPolicyHasPrivateReceiptInfo(Boolean policyHasPrivateReceiptInfo) {
    this.policyHasPrivateReceiptInfo = policyHasPrivateReceiptInfo;
  }


  public ShopListingWithAssociationsShop hasUnstructuredPolicies(Boolean hasUnstructuredPolicies) {
    
    this.hasUnstructuredPolicies = hasUnstructuredPolicies;
    return this;
  }

   /**
   * When true, the shop displays additional unstructured policy fields.
   * @return hasUnstructuredPolicies
  **/
  @javax.annotation.Nullable

  public Boolean getHasUnstructuredPolicies() {
    return hasUnstructuredPolicies;
  }


  public void setHasUnstructuredPolicies(Boolean hasUnstructuredPolicies) {
    this.hasUnstructuredPolicies = hasUnstructuredPolicies;
  }


  public ShopListingWithAssociationsShop policyPrivacy(String policyPrivacy) {
    
    this.policyPrivacy = policyPrivacy;
    return this;
  }

   /**
   * The shop&#39;s privacy policy string (may be blank).
   * @return policyPrivacy
  **/
  @javax.annotation.Nullable

  public String getPolicyPrivacy() {
    return policyPrivacy;
  }


  public void setPolicyPrivacy(String policyPrivacy) {
    this.policyPrivacy = policyPrivacy;
  }


  public ShopListingWithAssociationsShop vacationAutoreply(String vacationAutoreply) {
    
    this.vacationAutoreply = vacationAutoreply;
    return this;
  }

   /**
   * The shop&#39;s automatic reply string displayed in new conversations when &#x60;is_vacation&#x60; is true.
   * @return vacationAutoreply
  **/
  @javax.annotation.Nullable

  public String getVacationAutoreply() {
    return vacationAutoreply;
  }


  public void setVacationAutoreply(String vacationAutoreply) {
    this.vacationAutoreply = vacationAutoreply;
  }


  public ShopListingWithAssociationsShop url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * The URL string for this shop.
   * @return url
  **/
  @javax.annotation.Nullable

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public ShopListingWithAssociationsShop imageUrl760x100(String imageUrl760x100) {
    
    this.imageUrl760x100 = imageUrl760x100;
    return this;
  }

   /**
   * The URL string for this shop&#39;s banner image.
   * @return imageUrl760x100
  **/
  @javax.annotation.Nullable

  public String getImageUrl760x100() {
    return imageUrl760x100;
  }


  public void setImageUrl760x100(String imageUrl760x100) {
    this.imageUrl760x100 = imageUrl760x100;
  }


  public ShopListingWithAssociationsShop numFavorers(Long numFavorers) {
    
    this.numFavorers = numFavorers;
    return this;
  }

   /**
   * The number of users who marked this shop a favorite.
   * minimum: 0
   * @return numFavorers
  **/
  @javax.annotation.Nullable

  public Long getNumFavorers() {
    return numFavorers;
  }


  public void setNumFavorers(Long numFavorers) {
    this.numFavorers = numFavorers;
  }


  public ShopListingWithAssociationsShop languages(List<String> languages) {
    
    this.languages = languages;
    return this;
  }

  public ShopListingWithAssociationsShop addLanguagesItem(String languagesItem) {
    if (this.languages == null) {
      this.languages = new ArrayList<>();
    }
    this.languages.add(languagesItem);
    return this;
  }

   /**
   * A list of language strings for the shop&#39;s enrolled languages where the default shop language is the first element in the array.
   * @return languages
  **/
  @javax.annotation.Nullable

  public List<String> getLanguages() {
    return languages;
  }


  public void setLanguages(List<String> languages) {
    this.languages = languages;
  }


  public ShopListingWithAssociationsShop iconUrlFullxfull(String iconUrlFullxfull) {
    
    this.iconUrlFullxfull = iconUrlFullxfull;
    return this;
  }

   /**
   * The URL string for this shop&#39;s icon image.
   * @return iconUrlFullxfull
  **/
  @javax.annotation.Nullable

  public String getIconUrlFullxfull() {
    return iconUrlFullxfull;
  }


  public void setIconUrlFullxfull(String iconUrlFullxfull) {
    this.iconUrlFullxfull = iconUrlFullxfull;
  }


  public ShopListingWithAssociationsShop isUsingStructuredPolicies(Boolean isUsingStructuredPolicies) {
    
    this.isUsingStructuredPolicies = isUsingStructuredPolicies;
    return this;
  }

   /**
   * When true, the shop accepted using structured policies.
   * @return isUsingStructuredPolicies
  **/
  @javax.annotation.Nullable

  public Boolean getIsUsingStructuredPolicies() {
    return isUsingStructuredPolicies;
  }


  public void setIsUsingStructuredPolicies(Boolean isUsingStructuredPolicies) {
    this.isUsingStructuredPolicies = isUsingStructuredPolicies;
  }


  public ShopListingWithAssociationsShop hasOnboardedStructuredPolicies(Boolean hasOnboardedStructuredPolicies) {
    
    this.hasOnboardedStructuredPolicies = hasOnboardedStructuredPolicies;
    return this;
  }

   /**
   * When true, the shop accepted OR declined after viewing structured policies onboarding.
   * @return hasOnboardedStructuredPolicies
  **/
  @javax.annotation.Nullable

  public Boolean getHasOnboardedStructuredPolicies() {
    return hasOnboardedStructuredPolicies;
  }


  public void setHasOnboardedStructuredPolicies(Boolean hasOnboardedStructuredPolicies) {
    this.hasOnboardedStructuredPolicies = hasOnboardedStructuredPolicies;
  }


  public ShopListingWithAssociationsShop includeDisputeFormLink(Boolean includeDisputeFormLink) {
    
    this.includeDisputeFormLink = includeDisputeFormLink;
    return this;
  }

   /**
   * When true, this shop\\&#39;s policies include a link to an EU online dispute form.
   * @return includeDisputeFormLink
  **/
  @javax.annotation.Nullable

  public Boolean getIncludeDisputeFormLink() {
    return includeDisputeFormLink;
  }


  public void setIncludeDisputeFormLink(Boolean includeDisputeFormLink) {
    this.includeDisputeFormLink = includeDisputeFormLink;
  }


  public ShopListingWithAssociationsShop isDirectCheckoutOnboarded(Boolean isDirectCheckoutOnboarded) {
    
    this.isDirectCheckoutOnboarded = isDirectCheckoutOnboarded;
    return this;
  }

   /**
   * (**DEPRECATED: Replaced by _is_etsy_payments_onboarded_.) When true, the shop has onboarded onto Etsy Payments.
   * @return isDirectCheckoutOnboarded
  **/
  @javax.annotation.Nullable

  public Boolean getIsDirectCheckoutOnboarded() {
    return isDirectCheckoutOnboarded;
  }


  public void setIsDirectCheckoutOnboarded(Boolean isDirectCheckoutOnboarded) {
    this.isDirectCheckoutOnboarded = isDirectCheckoutOnboarded;
  }


  public ShopListingWithAssociationsShop isEtsyPaymentsOnboarded(Boolean isEtsyPaymentsOnboarded) {
    
    this.isEtsyPaymentsOnboarded = isEtsyPaymentsOnboarded;
    return this;
  }

   /**
   * When true, the shop has onboarded onto Etsy Payments.
   * @return isEtsyPaymentsOnboarded
  **/
  @javax.annotation.Nullable

  public Boolean getIsEtsyPaymentsOnboarded() {
    return isEtsyPaymentsOnboarded;
  }


  public void setIsEtsyPaymentsOnboarded(Boolean isEtsyPaymentsOnboarded) {
    this.isEtsyPaymentsOnboarded = isEtsyPaymentsOnboarded;
  }


  public ShopListingWithAssociationsShop isCalculatedEligible(Boolean isCalculatedEligible) {
    
    this.isCalculatedEligible = isCalculatedEligible;
    return this;
  }

   /**
   * When true, the shop is eligible for calculated shipping profiles. (Only available in the US and Canada)
   * @return isCalculatedEligible
  **/
  @javax.annotation.Nullable

  public Boolean getIsCalculatedEligible() {
    return isCalculatedEligible;
  }


  public void setIsCalculatedEligible(Boolean isCalculatedEligible) {
    this.isCalculatedEligible = isCalculatedEligible;
  }


  public ShopListingWithAssociationsShop isOptedInToBuyerPromise(Boolean isOptedInToBuyerPromise) {
    
    this.isOptedInToBuyerPromise = isOptedInToBuyerPromise;
    return this;
  }

   /**
   * When true, the shop opted in to buyer promise.
   * @return isOptedInToBuyerPromise
  **/
  @javax.annotation.Nullable

  public Boolean getIsOptedInToBuyerPromise() {
    return isOptedInToBuyerPromise;
  }


  public void setIsOptedInToBuyerPromise(Boolean isOptedInToBuyerPromise) {
    this.isOptedInToBuyerPromise = isOptedInToBuyerPromise;
  }


  public ShopListingWithAssociationsShop isShopUsBased(Boolean isShopUsBased) {
    
    this.isShopUsBased = isShopUsBased;
    return this;
  }

   /**
   * When true, the shop is based in the US.
   * @return isShopUsBased
  **/
  @javax.annotation.Nullable

  public Boolean getIsShopUsBased() {
    return isShopUsBased;
  }


  public void setIsShopUsBased(Boolean isShopUsBased) {
    this.isShopUsBased = isShopUsBased;
  }


  public ShopListingWithAssociationsShop transactionSoldCount(Long transactionSoldCount) {
    
    this.transactionSoldCount = transactionSoldCount;
    return this;
  }

   /**
   * The total number of sales ([transactions](/documentation/reference#tag/Shop-Receipt-Transactions)) for this shop.
   * minimum: 0
   * @return transactionSoldCount
  **/
  @javax.annotation.Nullable

  public Long getTransactionSoldCount() {
    return transactionSoldCount;
  }


  public void setTransactionSoldCount(Long transactionSoldCount) {
    this.transactionSoldCount = transactionSoldCount;
  }


  public ShopListingWithAssociationsShop shippingFromCountryIso(String shippingFromCountryIso) {
    
    this.shippingFromCountryIso = shippingFromCountryIso;
    return this;
  }

   /**
   * The country iso the shop is shipping from.
   * @return shippingFromCountryIso
  **/
  @javax.annotation.Nullable

  public String getShippingFromCountryIso() {
    return shippingFromCountryIso;
  }


  public void setShippingFromCountryIso(String shippingFromCountryIso) {
    this.shippingFromCountryIso = shippingFromCountryIso;
  }


  public ShopListingWithAssociationsShop shopLocationCountryIso(String shopLocationCountryIso) {
    
    this.shopLocationCountryIso = shopLocationCountryIso;
    return this;
  }

   /**
   * The country iso where the shop is located.
   * @return shopLocationCountryIso
  **/
  @javax.annotation.Nullable

  public String getShopLocationCountryIso() {
    return shopLocationCountryIso;
  }


  public void setShopLocationCountryIso(String shopLocationCountryIso) {
    this.shopLocationCountryIso = shopLocationCountryIso;
  }


  public ShopListingWithAssociationsShop reviewCount(Long reviewCount) {
    
    this.reviewCount = reviewCount;
    return this;
  }

   /**
   * Number of reviews of shop listings in the past year.
   * @return reviewCount
  **/
  @javax.annotation.Nullable

  public Long getReviewCount() {
    return reviewCount;
  }


  public void setReviewCount(Long reviewCount) {
    this.reviewCount = reviewCount;
  }


  public ShopListingWithAssociationsShop reviewAverage(Float reviewAverage) {
    
    this.reviewAverage = reviewAverage;
    return this;
  }

   /**
   * Average rating based on reviews of shop listings in the past year.
   * @return reviewAverage
  **/
  @javax.annotation.Nullable

  public Float getReviewAverage() {
    return reviewAverage;
  }


  public void setReviewAverage(Float reviewAverage) {
    this.reviewAverage = reviewAverage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShopListingWithAssociationsShop shopListingWithAssociationsShop = (ShopListingWithAssociationsShop) o;
    return Objects.equals(this.shopId, shopListingWithAssociationsShop.shopId) &&
        Objects.equals(this.userId, shopListingWithAssociationsShop.userId) &&
        Objects.equals(this.shopName, shopListingWithAssociationsShop.shopName) &&
        Objects.equals(this.createDate, shopListingWithAssociationsShop.createDate) &&
        Objects.equals(this.createdTimestamp, shopListingWithAssociationsShop.createdTimestamp) &&
        Objects.equals(this.title, shopListingWithAssociationsShop.title) &&
        Objects.equals(this.announcement, shopListingWithAssociationsShop.announcement) &&
        Objects.equals(this.currencyCode, shopListingWithAssociationsShop.currencyCode) &&
        Objects.equals(this.isVacation, shopListingWithAssociationsShop.isVacation) &&
        Objects.equals(this.vacationMessage, shopListingWithAssociationsShop.vacationMessage) &&
        Objects.equals(this.saleMessage, shopListingWithAssociationsShop.saleMessage) &&
        Objects.equals(this.digitalSaleMessage, shopListingWithAssociationsShop.digitalSaleMessage) &&
        Objects.equals(this.updateDate, shopListingWithAssociationsShop.updateDate) &&
        Objects.equals(this.updatedTimestamp, shopListingWithAssociationsShop.updatedTimestamp) &&
        Objects.equals(this.listingActiveCount, shopListingWithAssociationsShop.listingActiveCount) &&
        Objects.equals(this.digitalListingCount, shopListingWithAssociationsShop.digitalListingCount) &&
        Objects.equals(this.loginName, shopListingWithAssociationsShop.loginName) &&
        Objects.equals(this.acceptsCustomRequests, shopListingWithAssociationsShop.acceptsCustomRequests) &&
        Objects.equals(this.policyWelcome, shopListingWithAssociationsShop.policyWelcome) &&
        Objects.equals(this.policyPayment, shopListingWithAssociationsShop.policyPayment) &&
        Objects.equals(this.policyShipping, shopListingWithAssociationsShop.policyShipping) &&
        Objects.equals(this.policyRefunds, shopListingWithAssociationsShop.policyRefunds) &&
        Objects.equals(this.policyAdditional, shopListingWithAssociationsShop.policyAdditional) &&
        Objects.equals(this.policySellerInfo, shopListingWithAssociationsShop.policySellerInfo) &&
        Objects.equals(this.policyUpdateDate, shopListingWithAssociationsShop.policyUpdateDate) &&
        Objects.equals(this.policyHasPrivateReceiptInfo, shopListingWithAssociationsShop.policyHasPrivateReceiptInfo) &&
        Objects.equals(this.hasUnstructuredPolicies, shopListingWithAssociationsShop.hasUnstructuredPolicies) &&
        Objects.equals(this.policyPrivacy, shopListingWithAssociationsShop.policyPrivacy) &&
        Objects.equals(this.vacationAutoreply, shopListingWithAssociationsShop.vacationAutoreply) &&
        Objects.equals(this.url, shopListingWithAssociationsShop.url) &&
        Objects.equals(this.imageUrl760x100, shopListingWithAssociationsShop.imageUrl760x100) &&
        Objects.equals(this.numFavorers, shopListingWithAssociationsShop.numFavorers) &&
        Objects.equals(this.languages, shopListingWithAssociationsShop.languages) &&
        Objects.equals(this.iconUrlFullxfull, shopListingWithAssociationsShop.iconUrlFullxfull) &&
        Objects.equals(this.isUsingStructuredPolicies, shopListingWithAssociationsShop.isUsingStructuredPolicies) &&
        Objects.equals(this.hasOnboardedStructuredPolicies, shopListingWithAssociationsShop.hasOnboardedStructuredPolicies) &&
        Objects.equals(this.includeDisputeFormLink, shopListingWithAssociationsShop.includeDisputeFormLink) &&
        Objects.equals(this.isDirectCheckoutOnboarded, shopListingWithAssociationsShop.isDirectCheckoutOnboarded) &&
        Objects.equals(this.isEtsyPaymentsOnboarded, shopListingWithAssociationsShop.isEtsyPaymentsOnboarded) &&
        Objects.equals(this.isCalculatedEligible, shopListingWithAssociationsShop.isCalculatedEligible) &&
        Objects.equals(this.isOptedInToBuyerPromise, shopListingWithAssociationsShop.isOptedInToBuyerPromise) &&
        Objects.equals(this.isShopUsBased, shopListingWithAssociationsShop.isShopUsBased) &&
        Objects.equals(this.transactionSoldCount, shopListingWithAssociationsShop.transactionSoldCount) &&
        Objects.equals(this.shippingFromCountryIso, shopListingWithAssociationsShop.shippingFromCountryIso) &&
        Objects.equals(this.shopLocationCountryIso, shopListingWithAssociationsShop.shopLocationCountryIso) &&
        Objects.equals(this.reviewCount, shopListingWithAssociationsShop.reviewCount) &&
        Objects.equals(this.reviewAverage, shopListingWithAssociationsShop.reviewAverage);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(shopId, userId, shopName, createDate, createdTimestamp, title, announcement, currencyCode, isVacation, vacationMessage, saleMessage, digitalSaleMessage, updateDate, updatedTimestamp, listingActiveCount, digitalListingCount, loginName, acceptsCustomRequests, policyWelcome, policyPayment, policyShipping, policyRefunds, policyAdditional, policySellerInfo, policyUpdateDate, policyHasPrivateReceiptInfo, hasUnstructuredPolicies, policyPrivacy, vacationAutoreply, url, imageUrl760x100, numFavorers, languages, iconUrlFullxfull, isUsingStructuredPolicies, hasOnboardedStructuredPolicies, includeDisputeFormLink, isDirectCheckoutOnboarded, isEtsyPaymentsOnboarded, isCalculatedEligible, isOptedInToBuyerPromise, isShopUsBased, transactionSoldCount, shippingFromCountryIso, shopLocationCountryIso, reviewCount, reviewAverage);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShopListingWithAssociationsShop {\n");
    sb.append("    shopId: ").append(toIndentedString(shopId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    shopName: ").append(toIndentedString(shopName)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    createdTimestamp: ").append(toIndentedString(createdTimestamp)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    announcement: ").append(toIndentedString(announcement)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    isVacation: ").append(toIndentedString(isVacation)).append("\n");
    sb.append("    vacationMessage: ").append(toIndentedString(vacationMessage)).append("\n");
    sb.append("    saleMessage: ").append(toIndentedString(saleMessage)).append("\n");
    sb.append("    digitalSaleMessage: ").append(toIndentedString(digitalSaleMessage)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    updatedTimestamp: ").append(toIndentedString(updatedTimestamp)).append("\n");
    sb.append("    listingActiveCount: ").append(toIndentedString(listingActiveCount)).append("\n");
    sb.append("    digitalListingCount: ").append(toIndentedString(digitalListingCount)).append("\n");
    sb.append("    loginName: ").append(toIndentedString(loginName)).append("\n");
    sb.append("    acceptsCustomRequests: ").append(toIndentedString(acceptsCustomRequests)).append("\n");
    sb.append("    policyWelcome: ").append(toIndentedString(policyWelcome)).append("\n");
    sb.append("    policyPayment: ").append(toIndentedString(policyPayment)).append("\n");
    sb.append("    policyShipping: ").append(toIndentedString(policyShipping)).append("\n");
    sb.append("    policyRefunds: ").append(toIndentedString(policyRefunds)).append("\n");
    sb.append("    policyAdditional: ").append(toIndentedString(policyAdditional)).append("\n");
    sb.append("    policySellerInfo: ").append(toIndentedString(policySellerInfo)).append("\n");
    sb.append("    policyUpdateDate: ").append(toIndentedString(policyUpdateDate)).append("\n");
    sb.append("    policyHasPrivateReceiptInfo: ").append(toIndentedString(policyHasPrivateReceiptInfo)).append("\n");
    sb.append("    hasUnstructuredPolicies: ").append(toIndentedString(hasUnstructuredPolicies)).append("\n");
    sb.append("    policyPrivacy: ").append(toIndentedString(policyPrivacy)).append("\n");
    sb.append("    vacationAutoreply: ").append(toIndentedString(vacationAutoreply)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    imageUrl760x100: ").append(toIndentedString(imageUrl760x100)).append("\n");
    sb.append("    numFavorers: ").append(toIndentedString(numFavorers)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    iconUrlFullxfull: ").append(toIndentedString(iconUrlFullxfull)).append("\n");
    sb.append("    isUsingStructuredPolicies: ").append(toIndentedString(isUsingStructuredPolicies)).append("\n");
    sb.append("    hasOnboardedStructuredPolicies: ").append(toIndentedString(hasOnboardedStructuredPolicies)).append("\n");
    sb.append("    includeDisputeFormLink: ").append(toIndentedString(includeDisputeFormLink)).append("\n");
    sb.append("    isDirectCheckoutOnboarded: ").append(toIndentedString(isDirectCheckoutOnboarded)).append("\n");
    sb.append("    isEtsyPaymentsOnboarded: ").append(toIndentedString(isEtsyPaymentsOnboarded)).append("\n");
    sb.append("    isCalculatedEligible: ").append(toIndentedString(isCalculatedEligible)).append("\n");
    sb.append("    isOptedInToBuyerPromise: ").append(toIndentedString(isOptedInToBuyerPromise)).append("\n");
    sb.append("    isShopUsBased: ").append(toIndentedString(isShopUsBased)).append("\n");
    sb.append("    transactionSoldCount: ").append(toIndentedString(transactionSoldCount)).append("\n");
    sb.append("    shippingFromCountryIso: ").append(toIndentedString(shippingFromCountryIso)).append("\n");
    sb.append("    shopLocationCountryIso: ").append(toIndentedString(shopLocationCountryIso)).append("\n");
    sb.append("    reviewCount: ").append(toIndentedString(reviewCount)).append("\n");
    sb.append("    reviewAverage: ").append(toIndentedString(reviewAverage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("shop_id");
    openapiFields.add("user_id");
    openapiFields.add("shop_name");
    openapiFields.add("create_date");
    openapiFields.add("created_timestamp");
    openapiFields.add("title");
    openapiFields.add("announcement");
    openapiFields.add("currency_code");
    openapiFields.add("is_vacation");
    openapiFields.add("vacation_message");
    openapiFields.add("sale_message");
    openapiFields.add("digital_sale_message");
    openapiFields.add("update_date");
    openapiFields.add("updated_timestamp");
    openapiFields.add("listing_active_count");
    openapiFields.add("digital_listing_count");
    openapiFields.add("login_name");
    openapiFields.add("accepts_custom_requests");
    openapiFields.add("policy_welcome");
    openapiFields.add("policy_payment");
    openapiFields.add("policy_shipping");
    openapiFields.add("policy_refunds");
    openapiFields.add("policy_additional");
    openapiFields.add("policy_seller_info");
    openapiFields.add("policy_update_date");
    openapiFields.add("policy_has_private_receipt_info");
    openapiFields.add("has_unstructured_policies");
    openapiFields.add("policy_privacy");
    openapiFields.add("vacation_autoreply");
    openapiFields.add("url");
    openapiFields.add("image_url_760x100");
    openapiFields.add("num_favorers");
    openapiFields.add("languages");
    openapiFields.add("icon_url_fullxfull");
    openapiFields.add("is_using_structured_policies");
    openapiFields.add("has_onboarded_structured_policies");
    openapiFields.add("include_dispute_form_link");
    openapiFields.add("is_direct_checkout_onboarded");
    openapiFields.add("is_etsy_payments_onboarded");
    openapiFields.add("is_calculated_eligible");
    openapiFields.add("is_opted_in_to_buyer_promise");
    openapiFields.add("is_shop_us_based");
    openapiFields.add("transaction_sold_count");
    openapiFields.add("shipping_from_country_iso");
    openapiFields.add("shop_location_country_iso");
    openapiFields.add("review_count");
    openapiFields.add("review_average");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ShopListingWithAssociationsShop
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ShopListingWithAssociationsShop.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ShopListingWithAssociationsShop is not found in the empty JSON string", ShopListingWithAssociationsShop.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ShopListingWithAssociationsShop.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ShopListingWithAssociationsShop` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("shop_name") != null && !jsonObj.get("shop_name").isJsonNull()) && !jsonObj.get("shop_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shop_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shop_name").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("announcement") != null && !jsonObj.get("announcement").isJsonNull()) && !jsonObj.get("announcement").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `announcement` to be a primitive type in the JSON string but got `%s`", jsonObj.get("announcement").toString()));
      }
      if ((jsonObj.get("currency_code") != null && !jsonObj.get("currency_code").isJsonNull()) && !jsonObj.get("currency_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency_code").toString()));
      }
      if ((jsonObj.get("vacation_message") != null && !jsonObj.get("vacation_message").isJsonNull()) && !jsonObj.get("vacation_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vacation_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vacation_message").toString()));
      }
      if ((jsonObj.get("sale_message") != null && !jsonObj.get("sale_message").isJsonNull()) && !jsonObj.get("sale_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sale_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sale_message").toString()));
      }
      if ((jsonObj.get("digital_sale_message") != null && !jsonObj.get("digital_sale_message").isJsonNull()) && !jsonObj.get("digital_sale_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `digital_sale_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("digital_sale_message").toString()));
      }
      if ((jsonObj.get("login_name") != null && !jsonObj.get("login_name").isJsonNull()) && !jsonObj.get("login_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `login_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("login_name").toString()));
      }
      if ((jsonObj.get("policy_welcome") != null && !jsonObj.get("policy_welcome").isJsonNull()) && !jsonObj.get("policy_welcome").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policy_welcome` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policy_welcome").toString()));
      }
      if ((jsonObj.get("policy_payment") != null && !jsonObj.get("policy_payment").isJsonNull()) && !jsonObj.get("policy_payment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policy_payment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policy_payment").toString()));
      }
      if ((jsonObj.get("policy_shipping") != null && !jsonObj.get("policy_shipping").isJsonNull()) && !jsonObj.get("policy_shipping").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policy_shipping` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policy_shipping").toString()));
      }
      if ((jsonObj.get("policy_refunds") != null && !jsonObj.get("policy_refunds").isJsonNull()) && !jsonObj.get("policy_refunds").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policy_refunds` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policy_refunds").toString()));
      }
      if ((jsonObj.get("policy_additional") != null && !jsonObj.get("policy_additional").isJsonNull()) && !jsonObj.get("policy_additional").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policy_additional` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policy_additional").toString()));
      }
      if ((jsonObj.get("policy_seller_info") != null && !jsonObj.get("policy_seller_info").isJsonNull()) && !jsonObj.get("policy_seller_info").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policy_seller_info` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policy_seller_info").toString()));
      }
      if ((jsonObj.get("policy_privacy") != null && !jsonObj.get("policy_privacy").isJsonNull()) && !jsonObj.get("policy_privacy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policy_privacy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policy_privacy").toString()));
      }
      if ((jsonObj.get("vacation_autoreply") != null && !jsonObj.get("vacation_autoreply").isJsonNull()) && !jsonObj.get("vacation_autoreply").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vacation_autoreply` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vacation_autoreply").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("image_url_760x100") != null && !jsonObj.get("image_url_760x100").isJsonNull()) && !jsonObj.get("image_url_760x100").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_url_760x100` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_url_760x100").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("languages") != null && !jsonObj.get("languages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `languages` to be an array in the JSON string but got `%s`", jsonObj.get("languages").toString()));
      }
      if ((jsonObj.get("icon_url_fullxfull") != null && !jsonObj.get("icon_url_fullxfull").isJsonNull()) && !jsonObj.get("icon_url_fullxfull").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `icon_url_fullxfull` to be a primitive type in the JSON string but got `%s`", jsonObj.get("icon_url_fullxfull").toString()));
      }
      if ((jsonObj.get("shipping_from_country_iso") != null && !jsonObj.get("shipping_from_country_iso").isJsonNull()) && !jsonObj.get("shipping_from_country_iso").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_from_country_iso` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_from_country_iso").toString()));
      }
      if ((jsonObj.get("shop_location_country_iso") != null && !jsonObj.get("shop_location_country_iso").isJsonNull()) && !jsonObj.get("shop_location_country_iso").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shop_location_country_iso` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shop_location_country_iso").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ShopListingWithAssociationsShop.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ShopListingWithAssociationsShop' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ShopListingWithAssociationsShop> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ShopListingWithAssociationsShop.class));

       return (TypeAdapter<T>) new TypeAdapter<ShopListingWithAssociationsShop>() {
           @Override
           public void write(JsonWriter out, ShopListingWithAssociationsShop value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ShopListingWithAssociationsShop read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ShopListingWithAssociationsShop given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ShopListingWithAssociationsShop
  * @throws IOException if the JSON string is invalid with respect to ShopListingWithAssociationsShop
  */
  public static ShopListingWithAssociationsShop fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ShopListingWithAssociationsShop.class);
  }

 /**
  * Convert an instance of ShopListingWithAssociationsShop to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

